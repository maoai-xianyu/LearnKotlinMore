plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'org.jetbrains.kotlin.kapt' version '1.3.71'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.3.71'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.71'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.71'
}

group 'org.mao'
version '1.0-SNAPSHOT'

apply plugin: 'application'
mainClassName = "net.println.kotlin.chapter03.CalcKt"
sourceCompatibility = 1.8

apply plugin: "kotlin"
apply plugin: "kotlin-noarg"
apply plugin: "kotlin-allopen"

/* 也就是说 如果数据类被 PoKo 修饰 ，会将数据类的 final 去掉，可以继承，同时生成一个无参数的默认构造方法*/
noArg{
    //invokeInitializers = true   用于初始化构造函数中的 init 块
    annotation("net.println.kotlin.chapter04.annotations.PoKo")
}

allOpen{
    annotation("net.println.kotlin.chapter04.annotations.PoKo")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation "com.squareup.retrofit2:retrofit:2.6.2"
    implementation "com.squareup.retrofit2:converter-gson:2.6.2"
    implementation "com.google.code.gson:gson:2.8.1"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"// JVM dependency
    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.8.0" // for KotlinJsonAdapterFactory
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.8.0"
    implementation "joda-time:joda-time:2.10"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}